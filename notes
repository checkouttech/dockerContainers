






Build Create an image 

 docker build -t [IMAGE_NAME] .

 docker build -t my-ubuntu-apache-webserver:0.1  .
docker build  -t  myimage:0.1   .

 With a different filename 

    docker build -f Dockerfile.example  -t km/docex .


Details 

	docker inspect images-name 



 without cache  
   docker build -t [IMAGE_NAME] .    --no-cache


Search remote images 

	docker search elasticsearch


Pull remote image without running 

	docker pull image name 

	pull a specific version of ubuntu image

	$ docker pull ubuntu:12.04





 Remove a container upon exit
   docker run --rm -it  [IMAGE_NAME]l   /bin/bash






Stop 
	docker stop [CONTAINER_ID]
	docker container stop es

Pause 
	docker pause ContainerID 
	docker npause ContainerID



Logs 
   docker logs -f [CONTAINER_NAME/ID]



Remove Image 

	docker rmi ImageID
	docker rmi [options] IMAGE NAME/ID [IMAGE NAME/ID...]


Remove Container 

	 docker rm CONTAINER_ID
	 	docker rm [options] CONTAINER ID/NAME [CONTAINER ID/NAME...]


Clean up 
 docker system prune



Ports
   specify a custom port




Network 


	docker network ls 




   docker network create [NETWORK_NAME]

    docker network ls
 	docker network inspect bridge

 	docker network inspect networkname 


History 

	docker history ubuntu


Docker Server Restart 

	service docker restart


Docker volume 

	Listing all the Docker Volumes

		docker volume list

	Creating a Docker Volume

		docker volume create myVolume.

	Inspecting a Docker Volume

		docker volume inspect <volume_name>

	Mounting Docker Volumes

		sudo docker run −−mount source=<name of volume>,destination=<path of a directory in container> <image_name>


	Deleting a Docker Volume

		docker rm <name of volume>




 to know how much resources they are using, for that purpose we can use the command.

$ docker stats



Kill all running containers.

Docker Cleanup
	
Container information
	docker stats	

List of al running containers
	docker ps	
	docker service ps devtest-service

	
